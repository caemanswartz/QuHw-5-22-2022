@page
@model QuintrixHomeworkPlayerMVP.Pages.Bots.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Bot</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Bot.Name)
        </dt>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Bot.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Bot.Name)
        </dd>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Bot.Status)
        </dd>
    </dl>
</div>
@if (Model.Bot.Status==BotStatus.Broken)
{
    @if((await AuthorizationService.AuthorizeAsync(
        User,Model.Bot,BotOperations.Repair)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Bot.Id"/>
            <input type="hidden" name="status" value="@BotStatus.Worn"/>
            <button type="sumbit" class="btn btn-xs btn-success">Repair</button>
        </form>
    }
}
@if (Model.Bot.Status!=BotStatus.Broken)
{
    @if((await AuthorizationService.AuthorizeAsync(
        User,Model.Bot,BotOperations.Break)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Bot.Id"/>
            <input type="hidden" name="status" value="@BotStatus.Broken"/>
            <button type="sumbit" class="btn btn-xs btn-success">Break</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
         User, Model.Bot,
         BotOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Bot.Id">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>